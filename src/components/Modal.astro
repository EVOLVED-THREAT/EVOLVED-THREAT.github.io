---
interface Props {
  id: string;
}

const { id } = Astro.props;
---

<dialog id={id} class="modal bg-white dark:bg-zinc-900 p-4 sm:p-6 rounded-lg shadow-xl max-w-2xl w-[calc(100%-2rem)] mx-auto max-h-[calc(100vh-2rem)] overflow-y-auto">
  <div class="modal-content">
    <slot />
  </div>
  <form method="dialog" class="mt-6 flex justify-end">
    <button class="px-4 py-2 bg-zinc-200 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100 rounded hover:bg-zinc-300 dark:hover:bg-zinc-700 transition-colors">
      Close
    </button>
  </form>
</dialog>

<style>
  dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
  }
  
  dialog[open] {
    animation: modal-open 0.3s ease normal;
  }
  
  @keyframes modal-open {
    from {
      opacity: 0;
      transform: translateY(-10%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Close modal when clicking backdrop
  document.querySelectorAll('dialog').forEach(dialog => {
    dialog.addEventListener('click', e => {
      const dialogDimensions = dialog.getBoundingClientRect();
      if (
        e.clientX < dialogDimensions.left ||
        e.clientX > dialogDimensions.right ||
        e.clientY < dialogDimensions.top ||
        e.clientY > dialogDimensions.bottom
      ) {
        dialog.close();
      }
    });
  });
</script>
