---
import type { CollectionEntry } from "astro:content";

export type BaseProps = {
  minimal: boolean | undefined;
};

export type BlogPostProps = BaseProps & CollectionEntry<"blog">;

export type ExternalPostProps = BaseProps & {
  title: string;
  url: string;
  date: Date | undefined;
  description: string | undefined;
  authors: { name: string; handle: string; }[] | undefined;
  isExternal: boolean;
};

type Props = BlogPostProps | ExternalPostProps;

const props = Astro.props;
const isCollectionEntry = "slug" in props;

// Handle both collection entries and external posts
const title = isCollectionEntry ? props.data.title : props.title;
const url = isCollectionEntry ? `/blog/${props.slug}/` : props.url;
const date = isCollectionEntry ? props.data.pubDate : props.date;
const description = isCollectionEntry ? props.data.description : props.description;
const authors = isCollectionEntry ? props.data.authors : props.authors;
const isExternal = isCollectionEntry ? false : props.isExternal;
const minimal = "minimal" in props ? props.minimal : false;

const fullDate = date?.toLocaleDateString("en", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<li
  class="group"
  class:list={{
    "sm:gap-2": !minimal,
    "lg:flex-row lg:items-baseline lg:justify-between": minimal,
  }}
>
  <a
    href={url}
    target={isExternal ? "_blank" : undefined}
    rel={isExternal ? "noopener noreferrer" : undefined}
    class="relative flex flex-col sm:flex-row items-start sm:items-baseline justify-between gap-4 sm:gap-8 border-b border-spacing-y-2 border-zinc-300 dark:border-zinc-800 py-4 hover:bg-threat-red/5 transition-colors w-full px-3 sm:px-4 overflow-hidden max-w-full"
  >
    <div class="flex flex-col flex-1 min-w-0 max-w-full">
      <div class="flex items-center gap-4 flex-wrap">
        <p class="font-semibold dark:text-zinc-300 text-zinc-950 group-hover:text-threat-red transition-colors break-words text-base sm:text-lg max-w-full overflow-hidden text-ellipsis">{title}</p>
        {isExternal && (
          <span class="inline-flex items-center rounded-full bg-zinc-800 px-2 py-0.5 text-xs text-zinc-200">
            External
          </span>
        )}
      </div>
      {
        !minimal && (
          <>
            {description && <p class="leading-relaxed max-w-full mt-2 text-sm sm:text-base break-words">{description}</p>}
            {authors && <p class="text-sm sm:text-base mt-2">
              <span class="text-zinc-500 dark:text-zinc-400">By </span>
              <span class="text-zinc-500 dark:text-zinc-400 font-bold">
                {authors.map((author, i) => (
                  <>
                    {author.name}
                    {i < authors.length - 1 ? (i === authors.length - 2 ? ' & ' : ', ') : ''}
                  </>
                ))}
              </span>
            </p>}
          </>
        )
      }
    </div>
    <time
      datetime={date?.toISOString()}
      class="text-sm sm:text-base text-zinc-500 dark:text-zinc-400 sm:min-w-[120px] text-left sm:text-right shrink-0"
      >{fullDate}
    </time>
  </a>
</li>
